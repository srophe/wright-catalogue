<?xml version="1.0" encoding="UTF-8"?>
<config>
    <testValue>ܫܠܡܐ ܥܠܡܐ</testValue><!-- do not delete; required for unit testing -->
    <fileOrConsole>file</fileOrConsole>
    <outputFileDirectory>/data/5_finalized/</outputFileDirectory><!-- use a relative path, starting with "/" and employing forward slashes ("/"), from the repository location declared in the config.xqm module -->
    <manuscriptLevelMetadata>
        <pathToMsPartsFolder>/data/5_finalized/ms-parts/125/</pathToMsPartsFolder><!-- use a relative path, starting with "/" and employing forward slashes ("/"), from the repository location declared in the config.xqm module -->
        <recordTitle>BL Add MS 14452</recordTitle>
        <uriValue>125</uriValue>
        <country>United Kingdom</country>
        <settlement>London</settlement>
        <repository>British Library</repository>
        <collection>Oriental Manuscripts</collection>
        <shelfMark>Add MS 14452</shelfMark>
        <revisionDesc>
            <scriptEditor>
                <editorId>srophe-util</editorId>
                <changeLogMessage>Merged the following URIs as msPart elements:</changeLogMessage><!-- script will append a comma-separated list of the manuscript URI numerical values to this text string and place in a //revisionDesc/change element -->
            </scriptEditor>
        </revisionDesc>
    </manuscriptLevelMetadata>
    <!--  When nesting into an existing composite file, this file can be declared using the compositeMsFile field. This field should contain a string of the file name, e.g. "20.xml". The file should be stored in the directory declared in //pathToMsPartsFolder above. -->
    <compositeMsFile></compositeMsFile>
    <!-- 
    The msPartFiles element contains a series of part elements. Each part element can contain nested part elements, allowing for full flexibility of the msPart outline.
    Each part element must have a fileName element whose text node is a file name in the directory declared in //pathToMsPartsFolder.
    Each part element may contain an oldPartId whose text node is the @xml:id attribute value of an msPart element contained within the file specified in the fileName field.
    If an oldPartId is included, only data specific to that msPart element will be included in the new composite file. Otherwise, the full TEI XML file specified in the fileName field will be processed as an ms part.
    The outline of part elements must reflect the desired, final outline of the composite msDesc.
    -->
    <msPartFiles>
        <part>
            <fileName>1158.xml</fileName><!-- Requiring both the fileName and oldPartId allows for full flexibility of ordering and reordering -->
        </part>   
        <part>
            <fileName>1160.xml</fileName>
        </part>
        <part>
            <fileName>1572.xml</fileName>
        </part>
        <part>
            <fileName>1573.xml</fileName>
        </part>
    </msPartFiles>
</config>
